// rolls = [1,2,3,4], mean = 6, n = 4
//pigdeon hole principle   
class Solution {
public:
    vector<int> missingRolls(vector<int>& rolls, int mean, int n) {
        int currentSum = accumulate(rolls.begin(), rolls.end(), 0);
        int totalDice = rolls.size() + n;
        int requiredSum = mean * totalDice;
        int missingSum = requiredSum - currentSum;
        
        if (missingSum < n || missingSum > 6 * n) {
            return {};
        }
        
        vector<int> result;
        while(n>0){
            int add=min(6,missingSum-n+1);
            result.push_back(add);
            missingSum-=add;
            n--;
        }
        
        return result;
    }
};
