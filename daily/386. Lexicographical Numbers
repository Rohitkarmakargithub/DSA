class Solution {
public:
    vector<int> lexicalOrder(int n) {
        vector<int> res;
        int curr = 1;
        for (int i = 0; i < n; i++) {
            res.push_back(curr);  // Instead of storing in vector, you could print here to achieve true O(1) space.
            if (curr * 10 <= n) {
                curr *= 10;  // Go to the next lexicographical number (add a zero at the end)
            } else {
                if (curr >= n) curr /= 10;  // If current number exceeds n, go back
                curr++;  // Move to the next number
                while (curr % 10 == 0) curr /= 10;  // Skip trailing zeros (if any)
            }
        }
        return res;
    }
};
