class Solution {
public:
    long long maxPoints(vector<vector<int>>& points) {
        int n = points.size();
        int m = points[0].size();
        vector<long long> prev(m, 0), cur(m, 0);
        
        for(int i = 0; i < m; i++) {
            prev[i] = points[0][i];
        }
        
        for(int i = 1; i < n; i++) {
            vector<long long> left(m, 0);
            vector<long long> right(m, 0);
            
            left[0] = prev[0]; // Calculate for the left
            for(int j = 1; j < m; j++) {
                left[j] = max(left[j-1] - 1, prev[j]);
            }
            
            right[m-1] = prev[m-1]; // Calculate for the right
            for(int j = m-2; j >= 0; j--) {
                right[j] = max(right[j+1] - 1, prev[j]);
            }
            
            for(int j = 0; j < m; j++) {
                cur[j] = points[i][j] + max(left[j], right[j]);
            }
            
            prev = cur; // Move to the next row
        }
        
        long long res = LLONG_MIN;
        for(int i = 0; i < m; i++) {
            res = max(res, prev[i]);
        }
        
        return res;
    }
};
