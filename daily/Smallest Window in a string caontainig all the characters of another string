class Solution
{
    public:
    //Function to find the smallest window in the string s consisting
    //of all the characters of string p.
//     Input: s = "timetopractice", p = "toc"
// Output: toprac
    string smallestWindow (string s, string p){
        vector<int> req(26,0);
        vector<int> hav(26,0);
        int match_cnt=0;
        int matched=0;
        
        if(s.size()<p.size())
            return "-1";
            
        for(int i=0;i<p.size();i++){
            req[p[i]-'a']++;
            if(req[p[i]-'a']==1)
                match_cnt++;
        }
        
        int j=0;
        int len=INT_MAX;
        string res="-1";
        for(int i=0;i<s.size();i++){
            hav[s[i]-'a']++;
            
            if(hav[s[i]-'a']==req[s[i]-'a']){
                matched++;
            }
            
            if(matched == match_cnt){
                while(hav[s[j]-'a'] > req[s[j]-'a'] ){
                    hav[s[j]-'a']--;
                    j++;
                }    
                if(len > i-j+1){
                    len=i-j+1;
                    res=s.substr(j,i-j+1);  
                }
            }
        }
  
        return res;
    }
};
