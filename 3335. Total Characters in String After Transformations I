class Solution {
public:
    int lengthAfterTransformations(std::string s, int t) {
        vector<long long> cnt(26, 0);  
        const int mod = 1e9 + 7;

        for (char ch : s) {
            cnt[ch - 'a']++;
        }

        for (int i = 0; i < t; i++) {
            vector<long long> new_cnt(26, 0);
            for (int j = 0; j < 25; j++) {
                new_cnt[j + 1] = cnt[j] % mod;  
            }
            new_cnt[0] = (new_cnt[0] + cnt[25]) % mod;  // Add count of 'z' to 'a'
            new_cnt[1] = (new_cnt[1] + cnt[25]) % mod;  // Add count of 'z' to 'b'
            cnt = new_cnt; 
        }

        long long res = 0;  
        for (int i = 0; i < 26; i++) {
            res = (res + cnt[i]) % mod; 
        }

        return static_cast<int>(res);  
    }
};
