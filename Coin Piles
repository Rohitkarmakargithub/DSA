class Solution {
public:
    int minimumCoins(vector<int>& arr, int k) {
        int n = arr.size();
        sort(arr.begin(), arr.end());

        vector<int> prefix(n, 0);
        prefix[0] = arr[0];
        for (int i = 1; i < n; i++) {
            prefix[i] = prefix[i - 1] + arr[i];
        }

        int mini = INT_MAX;

        for (int i = 0; i < n; i++) {
            if (i - 1 >= 0 && arr[i - 1] == arr[i]) continue;

            int start = arr[i];
            int maxi = start + k;

            int idx = upper_bound(arr.begin(), arr.end(), maxi) - arr.begin();
            int number_elements = n - idx;

            int left_sum = (i > 0) ? prefix[i - 1] : 0;
            int right_sum = (idx > 0) ? (prefix[n - 1] - prefix[idx - 1]) : prefix[n - 1];

            int total_remove = left_sum + (right_sum - number_elements * (start + k));
            mini = min(mini, total_remove);
        }

        return mini;
    }
};
