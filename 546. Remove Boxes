class Solution {
public:
    int func(int streak,int left, int right,vector<int>& boxes,vector<vector<vector<int>>>& dp
    ){
        if(left>right)
            return 0;

        if(left==right){
            return (streak+1) * (streak+1);
        }

        if(dp[streak][left][right]!=-1)
            return dp[streak][left][right];

        int maxi =  func(0,left+1,right,boxes,dp) + (streak+1) * (streak+1);

        for(int i=left+1;i<=right;i++){
            if(boxes[left]==boxes[i])
                maxi = max(maxi,func(0,left+1,i-1,boxes,dp) + func(streak+1,i,right,boxes,dp));
        }

        return dp[streak][left][right]=maxi;
    }

    int removeBoxes(vector<int>& boxes) {
        int n=boxes.size();
        int left=0;
        int right=n-1;
        vector<vector<vector<int>>> dp(n,vector<vector<int>>(n,vector<int>(n,-1)));
        return func(0,left,right,boxes,dp);
    }
};
// [3,2,2,3,2,2,3]
